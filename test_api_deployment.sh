#!/bin/bash
# Portfolio Deployment Status Monitor
# Tests both API functions and database connectivity

echo "ÔøΩ Portfolio Deployment Status Monitor"
echo "======================================"
echo ""

# Test API Functions
echo "üì° Testing API Functions..."
response=$(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/about)

if [ "$response" = "200" ]; then
    echo "‚úÖ API Functions: WORKING"
    
    # Test each endpoint briefly
    echo "   üìã /api/about: $(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/about)"
    echo "   üíº /api/experiences: $(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/experiences)"
    echo "   üöÄ /api/projects: $(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/projects)"
    echo "   üõ†Ô∏è  /api/skills: $(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/skills)"
    echo "   üìû /api/contact: $(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com/api/contact)"
else
    echo "‚è≥ API Functions: Still deploying (Status: $response)"
fi

echo ""

# Test Frontend
echo "üåê Testing Frontend..."
frontend_status=$(curl -s -o /dev/null -w "%{http_code}" https://domjweb.com)
if [ "$frontend_status" = "200" ]; then
    echo "‚úÖ Frontend: WORKING at https://domjweb.com"
else
    echo "‚ùå Frontend: Issue detected (Status: $frontend_status)"
fi

echo ""

# Test DNS
echo "üåç Testing DNS..."
dns_result=$(nslookup domjweb.com 2>/dev/null | grep "Address:" | tail -1 | awk '{print $2}')
if [ ! -z "$dns_result" ]; then
    echo "‚úÖ DNS: domjweb.com ‚Üí $dns_result"
else
    echo "‚ùå DNS: Not resolving"
fi

echo ""
echo "üìä Overall Status:"
echo "   ‚Ä¢ Custom Domain: ‚úÖ Live at https://domjweb.com"
echo "   ‚Ä¢ SSL Certificate: ‚úÖ Auto-provisioned"
echo "   ‚Ä¢ Frontend App: ‚úÖ Deployed and working"
if [ "$response" = "200" ]; then
    echo "   ‚Ä¢ API Functions: ‚úÖ All endpoints active"
    echo "   ‚Ä¢ Database: Ready for connection string"
else
    echo "   ‚Ä¢ API Functions: ‚è≥ Still deploying (usually takes 15-20 min)"
    echo "   ‚Ä¢ Database: ‚è≥ Deployment in progress"
fi

echo ""
echo "üéØ Next Steps:"
if [ "$response" = "200" ]; then
    echo "   1. Get PostgreSQL connection string from Azure Portal"
    echo "   2. Add DATABASE_URL to Static Web Apps environment variables"
    echo "   3. Test database connectivity"
else
    echo "   1. Wait for API functions to deploy (check again in 5-10 minutes)"
    echo "   2. Monitor database deployment in Azure Portal"
fi

echo ""
echo "Monitor completed at $(date)"